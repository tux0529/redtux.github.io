{"posts":[{"title":"让你的各种网络密码无法被人破解","text":"让你的各种网络密码无法被人破解互联网产品各种各样，我们也就拥有了各种各样的帐号密码。网银密码，网站密码等等，大家一般化为了好记，都设置同一个密码，或者很简单的密码。这样就造成自己的帐号被黑客窃取。密码要想不被黑客猜中，有几点非常重要的注意事项 1、不要靠字典中的单词：如果你的密码可以在单词书中找到，那就和没有一样。黑客们经常借助词典以及词汇的变体测试密码.如果你不属于这一类，他们通常就会放弃。 2、一个密码绝对不要使用两次：人们喜欢在不同的网站使用同一密码，这可让黑客有了可乘之机。如果你的LinkedIn账户遭泄露，可能没什么损失;但他们会利用该密码尝试你的电子邮箱、银行账户等一切存储资产及重要个人数据的地方。 3、设置密码短语。密码越长，破解的时间也越长。如果不想让黑客在24小时内能破解你的密码，密码长度应该超过14个字符。因为长密码难于记忆，可考虑用喜欢的电影台词、歌词或一首诗的首字母拼接在一起。 4、胡乱敲击键盘：对于敏感的账户，格罗斯曼先生建议随机乱敲键盘，并间或敲击Shift和Alt键，然后将结果复制到一个文本，存入一个有密码保护的U盘。 5、安全存储你的密码。不要将密码放在收件箱或桌面。如果恶意软件感染电脑，你就完蛋了。格罗斯曼先生将密码文件存入加密U盘，使用帐户时，他把这些密码复制粘贴过去。即便黑客利用键盘记录软件，同样无法捕捉到他的密码。科克先生则把密码提示保存一张纸上，把敏感的信息和互联网彻底隔离。 6、不要依赖密码管理器。密码保护软件可使用户将所有用户名和密码存储在同一区域。有些程序还能为你创建强大的密码，只要你输入主密码，就能帮你自动登录网站。如LastPass、SplashData和AgileBits等等。科克先生认为，即使加密后，密码仍然留在计算机里。如果电脑遭到盗窃，等于丢失所有密码。而且密码管理器不一定靠谱，今年初在阿姆斯特丹举行的安全会议上，黑客们就演示了破解手机密码管理器的技术。 7、安全问题最好答非所问。网站的验证问题经常问道“你最喜欢什么颜色?”“你在哪所中学就读?”，这些问题的答案局限性太大，很容易在互联网上找到。今年初，一名黑客利用米特？罗姆尼(Mitt Romney)最喜欢的宠物的名字破解其Hotmail和Dropbox帐户。比较安全的做法是密码提示和问题无关。如果安全问题问出生医院的名称，你的回答可以是最喜欢的歌词。 8、使用不同的浏览器。不同的网络活动要用不同的浏览器。选择一个浏览器做乱七八糟的事情，如浏览网上论坛、新闻网站、博客等不重要的事情。第二个浏览器用于登录网上银行或收发电子邮件。这样浏览器被攻击后，银行帐户就不一定会泄露。Accuvant Labs去年研究发现，在其所调查的火狐、谷歌Chrome及微软Internet Explorer浏览器中，Chrome最安全。 9、别乱分享你的信息。不要经常利用真实的E-mail地址注册网上帐户。很多“一次性”e-mail地址是最佳选择，如10minutemail.com提供的地址，用户注册、确认在线账户后，这些电子邮件地址会自我销毁。 10、输入任何密码之前一定要搞清楚你当前访问的地址是你想要访问的地址，特别是现在的应用总喜欢用内置的浏览器打开网址，像微信、各个邮箱客户端，打开的网站并不会显示url地址，这样很容易就会碰到李鬼而没有发现。博主最近邮件收到一封自称是纪委的调查邮件，附件是一张二维码，扫码后转到到网易邮箱登录界面，因为是微信打开的网址，所以没有显示地址，用浏览器打开后发现是李鬼，随便用一个账号密码登录之后显示密码错误，然后就转跳到李逵哪里去了。 最后分享一下我的密码设置规则： 我的网络账户被分为3个等级： 1 普通账户，用在一些普通论坛上，比如某一天搜到一个需要的文件在一个论坛里，但是必须注册账户才能下载，这时候就可以用普通账户，可以选择一个统一的账户名和密码，我的用户名就是redtux，密码是好多年前在一个网站上看到的一句话的首字母缩写。用户名要选择一个不容易重复的，我的这个组合用了10多年了，很多时候在一个网站注册的时候发现用户名已经注册了，我就用我的固定账户密码登录就可以进去了。 2 知名一点的账户，QQ，微信，百度，网易之类，用普通账户的密码跟对应网站的名字组合，比如网易密码可以是 普通密码@WangYi，你只要记住一个固定的组合规则，登录的时候就自动能生成密码。 3 涉及财产安全的，银行类，支付宝类的，方法同2，但是生成规则更复杂一点，比如可以加入更多的特殊符号。 这样子就只要记住一个密码和2种规则，就能保证所有账户的密码都不一样，如果其中一个网站被暴库也能保证其他网站的账号安全。","link":"/2018/02/10/skills-password/"},{"title":"Ubuntu Server 18.04常用管理","text":"1.重启网络服务： sudo /etc/init.d/networking restart 或者： service networking restart 2.设置Nameserver（2种方法）： 修改/etc/resolv.conf，但此文件会被resolvconf重写，故应该修改resolvconf配置文件/etc/resolvconf/resolv.conf.d/head， 增加：nameserver 202.96.209.133 修改/etc/network/interfaces，DNS对应的参数名为dns-nameservers，这里设置的优先级比上一种方法高。如果两种方法都设置了，则都会出现在/etc/resolv.conf中。 3.将用户加入 group：usermod -G groupname username (这种会把用户从其他组中去掉，只属于该组)如：usermod -G git git (git只属于git组) usermod -a -G groupname username (把用户添加到这个组，之前所属组不影响)如：usermod -a -G www git (git属于之前git组，也属于www组) 1234567891011121314xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:xxx@xxxx:~$ usermod -G 27 user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:user1xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:xxx@xxxx:~$ usermod -a -G 999 user1xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:user1 1xxx@xxxx:~$ useradd -r -m -s /bin/bash -G 27 test1 4.修改时区和时间： 首先查看时区： 12redtux@redtux-PC:~$ date -RThu, 31 May 2018 00:03:22 +0800 修改时区，执行sudo tzselect，按提示选择时区. 复制文件到/etc目录下 sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 更新时间 sudo ntpdate time.windows.com","link":"/2021/07/10/ubuntu-server/"},{"title":"macOS系统使用技巧","text":"1.tree命令自定义mac下默认是没有 tree命令的，不过我们可以使用find命令模拟出tree命令的效果，如显示当前目录的 tree 的命令： 1$ find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' 当然你也可以写一个别名来快速执行该命令，运行如下命令，将上面这个命令写到~/.bash_profile里，以后直接运行tree命令就更方便了: 1alias tree=&quot;find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'&quot; 安装tree命令行工具也可以使用 homebrew 安装 tree 命令行：brew install tree 这样就在你的mac上安装了 tree 命令行了。 tree命令行参数（只实用与安装了tree命令行工具）： -a 显示所有文件和目录。 -A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。 -C 在文件和目录清单加上色彩，便于区分各种类型。 -d 显示目录名称而非内容。 -D 列出文件或目录的更改时间。 -f 在每个文件或目录之前，显示完整的相对路径名称。 -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”/“,”=”,”@”,”|”号。 -g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。 -i 不以阶梯状列出文件或目录名称。 -I 不显示符合范本样式的文件或目录名称。 -l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。 -n 不在文件和目录清单加上色彩。 -N 直接列出文件和目录名称，包括控制字符。 -p 列出权限标示。 -P 只显示符合范本样式的文件或目录名称。 -q 用”?”号取代控制字符，列出文件和目录名称。 -s 列出文件或目录大小。 -t 用文件和目录的更改时间排序。 -u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。 -x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。 2.改变APP图标最近发现有些APP图标实在是难看，忍不住想换个标，就在网上查了下资料，MacOS系统提供了生成icns的命令，我们需要准备一张png的图，这张图最小要1024*1024的分辨率。 制作步骤： 找图找一张分辨率1024*1024的png图片 建图片集目录打开终端输入以下命令：mkdir xxx. iconset注意：必须以.iconset后缀结尾 转换图片把原图片转为不同大小的图片，并放入上面的创建的目录中sips -z 16 16 pic.png –out xxx.iconset/icon_16x16.pngsips -z 32 32 pic.png –out xxx.iconset/icon_16x16@2x.pngsips -z 32 32 pic.png –out xxx.iconset/icon_32x32.pngsips -z 64 64 pic.png –out xxx.iconset/icon_32x32@2x.pngsips -z 128 128 pic.png –out xxx.iconset/icon_128x128.pngsips -z 256 256 pic.png –out xxx.iconset/icon_128x128@2x.pngsips -z 256 256 pic.png –out xxx.iconset/icon_256x256.pngsips -z 512 512 pic.png –out xxx.iconset/icon_256x256@2x.pngsips -z 512 512 pic.png –out xxx.iconset/icon_512x512.pngsips -z 1024 1024 pic.png –out xxx.iconset/icon_512x512@2x.png@2x 的是为retina屏准备的，以上命令执行完后去目录里看下图片是否生成好了 生成图标这一步就是制作icns的最后一步了在命令行中输入一下命令iconutil -c icns xxx.iconset -o xxx.icns这时，目录中就会出现你要的icns图标文件了 替换图标在应用程序中找到想要替换的APP，右键，显示简介，然后把刚才的icns文件拖到简介里就可以了，替换完了之后需要把APP退出后才能看到新的图标。 批量制作可以把制作过程写成一个shell文件，保存成.sh文件，这样就可以批量生成不同大小的图片并执行iconutil命令 123456789101112131415161718192021222324252627282930313233343536373839#!/bin/shif [ x&quot;$1&quot; = x ]; then echo &quot;\\033[31m 请输入要转换的图片全名(PNG格式的图片) \\033[0m&quot; exitfiecho $1newstr=$(tr '[A-Z]' '[a-z]' &lt;&lt;&lt;&quot;$1&quot;)if [[ $newstr != *.png ]]; then echo &quot;\\033[31m 图片不是png格式 \\033[0m&quot; exitfiif [ x&quot;$2&quot; = x ]; then echo &quot;\\033[31m 请输入iconset目录(命名方式xxx.iconset, 务必以 .iconset 结尾) \\033[0m&quot; exitfiif [[ $2 != *.iconset ]]; then echo &quot;\\033[31m iconset目录命令不规范 \\033[0m&quot; exitfi# 生成的图片名name_array=(&quot;icon_16x16.png&quot; &quot;icon_16x16@2x.png&quot; &quot;icon_32x32.png&quot; &quot;icon_32x32@2x.png&quot; &quot;icon_128x128.png&quot; &quot;icon_128x128@2x.png&quot; &quot;icon_256x256.png&quot; &quot;icon_256x256@2x.png&quot; &quot;icon_512x512.png&quot; &quot;icon_512x512@2x.png&quot;)#尺寸size_array=(&quot;16&quot; &quot;32&quot; &quot;32&quot; &quot;64&quot; &quot;128&quot; &quot;256&quot; &quot;256&quot; &quot;512&quot; &quot;512&quot; &quot;1024&quot;)# 创建 iconset 目录if [ ! -d $2 ]; then mkdir $2fifor ((i = 0; i &lt; ${#name_array[@]}; ++i)); do m_dir=$2/${name_array[i]} sips -z ${size_array[i]} ${size_array[i]} $1 --out $m_dirdone# 生成icns 命令iconutil -c icns $2 -o ${2%*&quot;.iconset&quot;}.icns# 生成完之后删除 iconset 文件夹rm -rf $2; 图标下载当然，你也可以去下载现成的 macOS Big Sur - Replacements Icons 图标还原如果想恢复成默认图标，只需要在对应的APP图标上“右键”&gt;“显示简介”，然后选中左上角的图标，按delete键就好了","link":"/2022/08/10/macOS-helper/"},{"title":"Xcode命令行工具Command Line Tools","text":"一般Xcode安装后，第一次打开时，会弹窗提示安装Command Line Tools，直接安装即可。 如果当时没有安装，后面也可以单独安装。 123xcode-select --install // 安装命令xcode-select --version // 查看版本 有时Command Line Tools出了问题，可以先尝试恢复默认设置来解决： 12// 恢复默认设置（需要sudo权限）sudo xcode-select --reset 还是解决不了，可以考虑删掉后重新安装： 12345// 强制删除安装目录下的文件sudo rm -rf /Library/Developer/CommandLineTools// 重新安装xcode-select --install 除了终端命令的安装方式，也可以到苹果开发者官网的下载专区搜索Command Line Tools并下载安装包。你也可以去xcodereleases网站找到各种版本Xcode的下载链接。","link":"/2023/08/02/xcode-command-line-tools/"},{"title":"QLineEdit获取焦点后全选字符&#x2F;失去焦点清除选择","text":"一直觉得Chrome的地址栏的体验非常好，获取焦点后自动全选，无论是想复制地址还是重新输入新的地址都帮我们省掉了一步，如何用QLineEdit实现这个特点呢。 网上搜索了一下，发现一篇博客http://www.cnblogs.com/91program/p/5521420.html ，但是这篇博客讲述的方法有点复杂，最后还要通过延时来达到目的，有点怪异。 最后只得查看QLineEdit的类参考仿照Chrome实现，Chrome的地址栏在无焦点状态下鼠标按下不动的时候，地址栏获取了焦点，光标位于鼠标位置；鼠标无移动释放，全选地址栏字符；再次单击，清除全选；鼠标按下移动后释放，则不会全选，而是选择字符；地址栏失去焦点，清除选择。 看起来我们需要判断鼠标按下时的位置与鼠标释放时鼠标有没有移动，申请一个变量m_pressPos来存储鼠标按下时的位置。还需要知道鼠标单击的时候QLineEdit是否已获得焦点，我们用变量m_onFocus来记录。定义一个QLineEdit子类，然后重新实现mousePressEvent，mouseReleaseEvent，focusOutEvent。 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#ifndef URLLINEEDIT_H#define URLLINEEDIT_H#include &lt;QLineEdit&gt;class UrlLineEdit : public QLineEdit{ Q_OBJECTpublic: UrlLineEdit(QWidget *parent = 0); ~UrlLineEdit();protected: void mouseReleaseEvent(QMouseEvent *e); void mousePressEvent(QMouseEvent *e); void focusOutEvent( QFocusEvent * e );private: bool m_onFocus; QPoint m_pressPos;};#endif // URLLINEEDIT_H#include &quot;urllineedit.h&quot;#include &lt;QFocusEvent&gt;UrlLineEdit::UrlLineEdit(QWidget *parent) :QLineEdit(parent), m_onFocus(false){}UrlLineEdit::~UrlLineEdit(){}void UrlLineEdit::mouseReleaseEvent(QMouseEvent *e){ if (e-&gt;button() == Qt::LeftButton ){ if( e-&gt;pos() == m_pressPos &amp;&amp; !m_onFocus){ m_onFocus = true; selectAll(); update(); } else { int start = cursorPositionAt(m_pressPos); setSelection( start , cursorPositionAt(e-&gt;pos())-start ); } } QLineEdit::mouseReleaseEvent(e);}void UrlLineEdit::mousePressEvent(QMouseEvent *e){ if (e-&gt;button() == Qt::LeftButton){ m_pressPos = e-&gt;pos(); setCursorPosition(cursorPositionAt(m_pressPos)); } QLineEdit::mousePressEvent(e);}void UrlLineEdit::focusOutEvent(QFocusEvent *e){ m_onFocus = false; if(!hasSelectedText()){ deselect(); } QLineEdit::focusOutEvent(e);} 通过测试基本上是实现了类似Chrome的这个特性。","link":"/2022/08/11/Qt/qt-qlineedit-focus/"},{"title":"Qt生成缩略图片存入sqlite","text":"Qt生成缩略图片存入sqlite新建一个工程pro文件中加入 QT += sql 添加sql支持。 >folded12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970// main.cpp#include &lt;QApplication&gt;#include &lt;QtGui&gt;#include &lt;QSqlDatabase&gt;#include &lt;QSqlError&gt;#include &lt;QSqlQuery&gt;int main(int argc, char *argv[]){ QApplication a(argc, argv); //添加数据库,不表 QSqlDatabase db = QSqlDatabase::addDatabase(&quot;QSQLITE&quot;, &quot;conn1&quot;); db.setDatabaseName(&quot;/home/htux/thumbs.sqlite&quot;); if(!db.open()) return 1; QByteArray baImage; QString filename = &quot;/home/htux/file2.jpg&quot;; QPixmap pixmapIn(filename); QBuffer buffer(&amp;baImage); buffer.open(QIODevice::WriteOnly); QPixmap pixmapSmall; //让生成的缩略图高宽都不超过256. pixmapSmall = pixmapIn.scaled(256,256, Qt::KeepAspectRatio, Qt::SmoothTransformation); //保存生成的缩略图到ByteArray, 格式为JPG, 图片质量50. //图片质量的取值Qt文档中没查到,不过按照国际惯例应该是0-100 //保存几个不同质量的图片看看差别 pixmapSmall.save(&amp;buffer, &quot;JPG&quot;,50); pixmapSmall.save(&quot;/home/htux/file2.png&quot;, &quot;PNG&quot;); pixmapSmall.save(&quot;/home/htux/file2-5.jpg&quot;, &quot;JPG&quot;, 20); pixmapSmall.save(&quot;/home/htux/file2-5.jpg&quot;, &quot;JPG&quot;, 50); pixmapSmall.save(&quot;/home/htux/file2-8.jpg&quot;, &quot;JPG&quot;, 80); QSqlQuery query(db); query.exec(&quot;CREATE TABLE thumbs &quot; &quot;(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,&quot; &quot; filename VCHAR(20) , thumbnail BLOB);&quot;); QString sql = QString(&quot;INSERT INTO thumbs VALUES &quot; &quot;( NULL , :filename, :thumbnail );&quot;); query.prepare(sql); query.bindValue(&quot;:filename&quot;, filename); query.bindValue(&quot;:thumbnail&quot;, baImage); query.exec(); query.exec(&quot;select * from thumbs;&quot;); //跳到最后存入的记录 if (!query.last()) return 1; QPixmap pixmapOut; //读出存入的图片 pixmapOut.loadFromData(query.value(2).toByteArray()); db.close(); //把图片用Label显示出来. QLabel label; label.setPixmap(pixmapOut); label.show(); return a.exec();}","link":"/2022/08/11/Qt/qt-sqlite-image/"}],"tags":[{"name":"Skills","slug":"Skills","link":"/tags/Skills/"},{"name":"macOS","slug":"macOS","link":"/tags/macOS/"},{"name":"Qt","slug":"Qt","link":"/tags/Qt/"}],"categories":[{"name":"备忘录","slug":"备忘录","link":"/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"},{"name":"Qt","slug":"Qt","link":"/categories/Qt/"}],"pages":[]}